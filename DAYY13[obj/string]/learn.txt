 Working with Object Properties in JavaScript

---

1. Getting Keys and Values

-  Object.keys(obj)

       Returns an array of all the keys (property names) in the object.


  let obj = { name: "kajal", age: 20 };

  console.log(Object.keys(obj)); // Output: ["name", "age"]


- Object.values(obj)

  Returns an array of all the values in the object.

 
  let obj = { name: "kajal", age: 20 };

     console.log(Object.values(obj)); // Output: ["kajal", 20]
 



 2. Adding a New Key to an Object

You can add a new property to an object using dot notation or bracket notation.


let obj = {
    name: "komal",
    age: 18
};

obj.city = "Nahik"; // Adds a new key 'city' with value 'Nahik'
console.log(obj); // Output: { name: "komal", age: 18, city: "Nashik" }


3. Deleting a Key from an Object

Use the `delete` operator to remove a property from an object.


delete obj.name; // Removes the 'name' property
console.log(obj); // Output: { age: 18, city: "Nashik" }




//*********************************************************************//
//*********************************************************************//

                              STRINGS


 str.length = return the length of the string

str.toUpperCase() : convert string into upperCase

str.toLowerCase() : convert string into lowerCase

str.includes(substring) : checks if the string contains the specified substring

str.indexOf(substring) : returns the index of the first occurrence of the substring

str.slice(start, end) : extracts a section of the string and returns it as a new string

str.replace(searchValue, newValue) : replaces the first occurrence of searchValue with newValue

str.split(separator) : splits the string into an array of substrings

str.trim() : removes whitespace from both ends of the string

str.charAt(index) : returns the character at the specified index

str.concat(string2) : joins two or more strings

str.repeat(count) : returns a new string with a specified number of copies of the string

str.startsWith(substring) : checks if the string starts with the specified substring

str.endsWith(substring) : checks if the string ends with the specified substring                            